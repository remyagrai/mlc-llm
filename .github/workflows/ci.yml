name: CI/CD Pipeline

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  docker:
    name: Docker Build & Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup QEMU for multi-arch
      uses: docker/setup-qemu-action@v3

    - name: Setup Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Make build.sh executable
      run: chmod +x ./scripts/build.sh
    - name: Build & Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: ghcr.io/${{ github.repository_owner }}/mlc-llm:latest

    - name: Test inside container
      run: |
        docker run --rm ghcr.io/${{ github.repository_owner }}/mlc-llm:latest test

  wheels:
    name: Build Python Wheels
    runs-on: ${{ matrix.os }}
    needs: docker
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install build tools
      run: pip install cibuildwheel==2.21.3

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse

    - name: Upload wheels
      uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl
        name: wheels-${{ matrix.os }}

  release:
    name: Publish Wheels as Release
    needs: wheels
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Download wheels
      uses: actions/download-artifact@v3
      with:
        path: dist
        name: wheels-*

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/*.whl
        asset_name: mlc-llm-${{ matrix.os }}.whl
        asset_content_type: application/octet-stream